{"version":3,"sources":["FavoritePlaces.js","About.js","Homepage.js","App.js","serviceWorker.js","index.js"],"names":["FavoritePlaces","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","inherits","createClass","key","value","_this2","d3","then","setState","console","log","react_default","a","createElement","className","map","d","i","Link","src","alt","Description","State","Component","About","apply","arguments","Homepage","App","HashRouter","to","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6546450b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { Card, Button, CardBody, CardTitle, CardText, Col } from 'reactstrap';\n\nexport class FavoritePlaces extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: []\n        }\n    }\n    componentDidMount() {\n        d3.csv('data/favPlaces.csv').then((data) => {\n            this.setState({\n                data: data\n            })\n        });\n    }\n    render() {\n        {console.log(this.state.data)}\n        return (\n            <div className=\"container text-center\">\n                Some of my favorite places:\n                <br></br>\n                <br></br>\n                { this.state.data.map((d, i) => {\n                    return (\n                        console.log(d.Link),\n                        <div className=\"card mb-4\">\n                            <img className=\"card-img-top\" src = {d.Link} alt = {d.Description} />\n                            <div className=\"card-body\">\n                                <h3 className=\"card-title\">{d.Description}</h3>\n                                <p className=\"card-text\">{d.State}</p>\n                            </div>\n                        </div>\n                    )\n                   \n                   }) }\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport class About extends Component {\n    render() {\n        return ( \n            <div className=\"container text-center\">\n                <div>\n                    HI, I'M CHAD\n                    <br></br>\n                    <br></br>\n                    I am currently a student at the Univerity of Washington studying Informatics. \n                    I was born in Honolulu, HI where I spent the first 20 years of my life.\n                    After living on an island for such a long time I decided it was time for a change in scenery. \n                    So I packed up and headed to beautiful Seattle. \n                    <br></br>\n                    <br></br>\n                    Some of my hobbies include taking pictures and traveling.\n                    My favorite camera of all time is hands down the Olympus Stylus Epic. \n                    It combines the fun of old school film with the ease of an automotic point and shoot.\n                    I don't think it can get any better than that! \n                    <br></br>\n                    <br></br>\n                    If you haven't already, be sure to check out my \"Favorite Places\" page!\n                    The first three pictures on there were shot with the Olympus! \n                </div>    \n\n                <div className=\"card mb-4\">\n                    <img className=\"card-img-top\" src = 'imgs/filmcam.JPG' alt = 'myself' />\n                </div>        \n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport class Homepage extends Component {\n    render() {\n        return (\n            <div className=\"container text-center\">\n                <div>\n                    Hey there, welcome to my page! \n                    <br></br>\n                    <br></br>\n                    Check out \"Favorite Places\" to see some cool pictures of \n                    some cool places or \"About Me\" to learn a little more about me (: \n                    <br></br>\n                    <br></br>\n                    Thanks for stopping by! \n                    <br></br>\n                    p.s. scroll down for a surprise (:\n                </div>\n\n                <div className=\"card mb-4\">\n                    <img className=\"card-img-top\" src = 'imgs/doggo.jpg' alt = 'husky' />\n                </div>\n                <div className=\"card mb-4\">\n                    <img className=\"card-img-top\" src = 'imgs/doggoclose.jpg' alt = 'husky' />\n                </div>\n                \n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport { FavoritePlaces } from './FavoritePlaces';\nimport { About } from './About';\nimport { Homepage } from './Homepage';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n            \t<div className=\"container\">\n            \t\t<Link to=\"/\">Home</Link>\n                \t<Link to=\"/fav\">Favorite Places</Link>\n                \t<Link to=\"/about\">About Me</Link>\n                \t<Route exact path=\"/\" component={Homepage} />\n                \t<Route path=\"/fav\" component={FavoritePlaces} />\n                \t<Route path=\"/about\" component={About} />\n              \t</div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}